{
  "version": 3,
  "file": "server.js",
  "sourceRoot": "../src/",
  "sources": [
    "server.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "socketio = require 'socket.io'\r\n\r\nmodule.exports =\r\n  (rs) ->\r\n    sockets = {}\r\n    callbacks = {}\r\n    io = socketio.listen rs.server\r\n    io.on 'connection', (socket) ->\r\n      if server = socket.handshake.query.server\r\n        sockets[server] = sockets[server] or {}\r\n        sockets[server][socket.id] = socket\r\n        socket.on 'user', (user) ->\r\n          socket.user = user\r\n        socket.on 'disconnect', ->\r\n          delete sockets[server][socket.id]\r\n    emit = (server, name, data, users) ->\r\n      for id, socket of sockets[server]\r\n        if users and users.length\r\n          continue if not users.includes socket.user._id\r\n        await socket.emit name, data if socket\r\n    rs.socket =\r\n      setup: (rainstorm) ->\r\n        rainstorm.socket = rainstorm.socket or {}\r\n        rainstorm.socket.emit = rainstorm.emit or (name, data, users) ->\r\n          emit rainstorm.name, name, data, users\r\n        rainstorm.socket.dbFn = rainstorm.dbFn or (args) ->\r\n          argsClone = JSON.parse JSON.stringify args\r\n          for id, socket of sockets[rainstorm.name]\r\n            argsClone.user = socket.user\r\n            if callbacks[rainstorm.name]?[args.op]\r\n              for callback in callbacks[rainstorm.name][args.op]\r\n                continue if not await callback args\r\n            await socket.emit args.op,\r\n              table: args.table\r\n              id: args.id\r\n        rainstorm.socket.on = (name, callback) ->\r\n          callbacks[rainstorm.name] = callbacks[rainstorm.name] or {}\r\n          callbacks[rainstorm.name][name] = callbacks[rainstorm.name][name] or []\r\n          callbacks[rainstorm.name][name].push callback\r\n        rainstorm.socket.off = (name, callback) ->\r\n          callbacks[rainstorm.name][name].splice callbacks[name].indexOf(callback), 1"
  ]
}